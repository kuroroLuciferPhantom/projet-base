<!-- État connecté - Collection de cartes -->
<section class="wallet-connected hidden" id="section-collection">
    <div class="collection-header">
        <h1>Ma Collection</h1>
        <div class="collection-stats">
            <div class="stat cards-count">
                <span class="stat-value" id="total-cards-count">0</span>
                <span class="stat-label">Cartes</span>
            </div>
            <div class="stat">
                <span class="stat-value" id="wins-count">0</span>
                <span class="stat-label">Victoires</span>
            </div>
            <div class="stat">
                <span class="stat-value" id="losses-count">0</span>
                <span class="stat-label">Défaites</span>
            </div>
            <div class="stat">
                <span class="stat-value" id="current-rank">Non classé</span>
                <span class="stat-label">Classement</span>
            </div>
            <div class="stat">
                <span class="stat-value" id="tokens-count">
                    <% if (user && user.tokenBalance !== undefined) { %>
                        <%= user.tokenBalance %>
                    <% } else { %>
                        0
                    <% } %>
                </span>
                <span class="stat-label">$EFC</span>
            </div>
        </div>
        <div class="collection-actions">
            <div class="filter-tools">
                <button class="btn btn-secondary" id="filter-cards">
                    <i class="fas fa-filter"></i>
                    Filtrer
                </button>
                <div class="filter-dropdown hidden" id="filter-dropdown">
                    <div class="filter-option">
                        <label>Rareté:</label>
                        <select id="filter-rarity">
                            <option value="all">Toutes</option>
                            <option value="common">Commune</option>
                            <option value="rare">Rare</option>
                            <option value="epic">Épique</option>
                            <option value="legendary">Légendaire</option>
                        </select>
                    </div>
                    <div class="filter-option">
                        <label>Recherche:</label>
                        <input type="text" id="filter-search" placeholder="Nom de carte...">
                    </div>
                    <div class="filter-option">
                        <label>En vente:</label>
                        <select id="filter-sale">
                            <option value="all">Toutes</option>
                            <option value="for-sale">En vente</option>
                            <option value="not-for-sale">Pas en vente</option>
                        </select>
                    </div>
                    <button class="btn btn-primary btn-sm" id="apply-filters">Appliquer</button>
                </div>
            </div>
            
            <div class="sort-tools">
                <button class="btn btn-secondary" id="sort-cards">
                    <i class="fas fa-sort"></i>
                    Trier
                </button>
                <div class="sort-dropdown hidden" id="sort-dropdown">
                    <div class="sort-option">
                        <select id="sort-by">
                            <option value="name">Nom</option>
                            <option value="rarity">Rareté</option>
                            <option value="attack">Attaque</option>
                            <option value="defense">Défense</option>
                            <option value="createdAt">Date d'obtention</option>
                        </select>
                    </div>
                    <div class="sort-option">
                        <select id="sort-order">
                            <option value="asc">Croissant</option>
                            <option value="desc">Décroissant</option>
                        </select>
                    </div>
                    <button class="btn btn-primary btn-sm" id="apply-sort">Appliquer</button>
                </div>
            </div>
            
            <button class="btn btn-secondary" id="reset-all-filters">
                <i class="fas fa-undo"></i>
                Réinitialiser
            </button>
            
            <div class="global-actions">
                <button class="btn btn-info" id="btn-refresh">
                    <i class="fas fa-sync"></i> Actualiser
                </button>
                <button class="btn btn-success" id="btn-sell-selected">
                    <i class="fas fa-tag"></i> Vendre sélectionnées
                </button>
            </div>
        </div>
    </div>
    
    <!-- Indicateur de chargement -->
    <div class="loading-indicator hidden" id="cards-loading">
        <div class="spinner"></div>
        <p>Chargement de votre collection...</p>
    </div>
    
    <!-- Si l'utilisateur n'a pas de cartes -->
    <div class="no-cards-prompt hidden" id="no-cards-section">
        <div class="empty-state">
            <div class="empty-img">
                <i class="fas fa-box-open fa-5x" style="color: #888;"></i>
            </div>
            <h3>Votre collection est vide</h3>
            <p>Vous n'avez pas encore de cartes dans votre collection. Commencez par acheter des boosters ou des cartes individuelles.</p>
            <div class="empty-actions">
                <button class="btn btn-primary" id="buy-pack">
                    <i class="fas fa-shopping-cart"></i>
                    Acheter un Booster
                </button>
                <button class="btn btn-secondary" id="visit-marketplace">
                    <i class="fas fa-store"></i>
                    Visiter le Marché
                </button>
            </div>
        </div>
    </div>
    
    <!-- Si l'utilisateur a des cartes -->
    <div class="cards-grid hidden" id="cards-grid">
        <!-- Cette section sera remplie dynamiquement avec les cartes de l'utilisateur -->
    </div>

    <!-- Message "Aucun résultat" pour les filtres -->
    <div class="no-results hidden" id="no-results-section">
        <div class="empty-state">
            <div class="empty-img">
                <i class="fas fa-search fa-3x" style="color: #6b7280;"></i>
            </div>
            <h3>Aucune carte ne correspond à vos critères</h3>
            <p>Essayez de modifier vos filtres pour voir plus de résultats.</p>
            <button class="btn btn-primary" id="reset-filters">Réinitialiser les filtres</button>
        </div>
    </div>

    <!-- Statistiques par rareté -->
    <div class="rarity-stats hidden" id="rarity-stats">
        <h3>Répartition par rareté</h3>
        <div class="rarity-breakdown">
            <div class="rarity-item common">
                <span class="rarity-name">Communes</span>
                <span class="rarity-count" id="common-count">0</span>
            </div>
            <div class="rarity-item rare">
                <span class="rarity-name">Rares</span>
                <span class="rarity-count" id="rare-count">0</span>
            </div>
            <div class="rarity-item epic">
                <span class="rarity-name">Épiques</span>
                <span class="rarity-count" id="epic-count">0</span>
            </div>
            <div class="rarity-item legendary">
                <span class="rarity-name">Légendaires</span>
                <span class="rarity-count" id="legendary-count">0</span>
            </div>
        </div>
    </div>

    <!-- Pagination -->
    <div class="pagination-container hidden" id="pagination-container">
        <button class="btn btn-secondary" id="prev-page" disabled>
            <i class="fas fa-chevron-left"></i> Précédent
        </button>
        <span class="page-info">Page <span id="current-page">1</span> sur <span id="total-pages">1</span></span>
        <button class="btn btn-secondary" id="next-page">
            Suivant <i class="fas fa-chevron-right"></i>
        </button>
    </div>
</section>

<script>
// Fonction de débogage
function toggleDebug() {
    const debugInfo = document.getElementById('debug-info');
    if (debugInfo.style.display === 'none') {
        debugInfo.style.display = 'block';
        updateDebugInfo();
    } else {
        debugInfo.style.display = 'none';
    }
}

function updateDebugInfo() {
    // Vérifier apiService
    const apiServiceSpan = document.getElementById('debug-api-service');
    if (apiServiceSpan) {
        apiServiceSpan.textContent = window.apiService ? 'Oui' : 'Non';
        apiServiceSpan.style.color = window.apiService ? 'green' : 'red';
    }
    
    // Vérifier utilisateur connecté
    const userLoggedSpan = document.getElementById('debug-user-logged');
    if (userLoggedSpan) {
        const isLoggedIn = window.apiService && window.apiService.isLoggedIn();
        userLoggedSpan.textContent = isLoggedIn ? 'Oui' : 'Non';
        userLoggedSpan.style.color = isLoggedIn ? 'green' : 'red';
    }
    
    // Dernière tentative
    const lastLoadSpan = document.getElementById('debug-last-load');
    if (lastLoadSpan) {
        lastLoadSpan.textContent = new Date().toLocaleTimeString();
    }
    
    // Nombre de cartes
    const cardsCountSpan = document.getElementById('debug-cards-count');
    if (cardsCountSpan && window.collectionService) {
        cardsCountSpan.textContent = window.collectionService.userCards.length;
    }
}

function forceLoadCollection() {
    console.log('[DEBUG] Force loading collection...');
    updateDebugInfo();
    if (window.collectionService) {
        window.collectionService.loadUserCollection();
    } else {
        console.error('[DEBUG] collectionService not available');
    }
}

// Auto-update debug info when section becomes visible
document.addEventListener('sectionChanged', (event) => {
    if (event.detail.section === 'collection') {
        console.log('[DEBUG] Collection section activated');
        setTimeout(updateDebugInfo, 100);
    }
});

// Observer pour détecter quand la section devient visible
const observer = new MutationObserver((mutations) => {
    mutations.forEach((mutation) => {
        if (mutation.type === 'attributes' && mutation.attributeName === 'class') {
            const target = mutation.target;
            if (target.id === 'section-collection' && !target.classList.contains('hidden')) {
                console.log('[DEBUG] Collection section is now visible');
                setTimeout(updateDebugInfo, 100);
            }
        }
    });
});

// Observer la section collection
const collectionSection = document.getElementById('section-collection');
if (collectionSection) {
    observer.observe(collectionSection, { attributes: true });
}

// Activer le mode debug par défaut en développement
if (window.location.hostname === 'localhost' || window.location.hostname === '127.0.0.1') {
    setTimeout(() => {
        const debugInfo = document.getElementById('debug-info');
        if (debugInfo) {
            debugInfo.style.display = 'block';
            updateDebugInfo();
        }
    }, 1000);
}

// Log initial pour vérifier que le script se charge
console.log('[DEBUG] Collection EJS debug script loaded');
</script>

<style>
/* Styles pour les nouvelles fonctionnalités */
.loading-indicator {
    text-align: center;
    padding: 40px;
}

.spinner {
    border: 4px solid #f3f3f3;
    border-top: 4px solid var(--color-primary, #3498db);
    border-radius: 50%;
    width: 40px;
    height: 40px;
    animation: spin 2s linear infinite;
    margin: 0 auto 20px;
}

@keyframes spin {
    0% { transform: rotate(0deg); }
    100% { transform: rotate(360deg); }
}

.rarity-stats {
    margin: 20px 0;
    padding: 20px;
    background: var(--card-bg, #1f2937);
    border-radius: 8px;
}

.rarity-breakdown {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
    gap: 15px;
    margin-top: 15px;
}

.rarity-item {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 10px 15px;
    border-radius: 6px;
    font-weight: 500;
}

.rarity-item.common {
    background-color: #e3f2fd;
    color: #1976d2;
}

.rarity-item.rare {
    background-color: #f3e5f5;
    color: #7b1fa2;
}

.rarity-item.epic {
    background-color: #fff3e0;
    color: #f57c00;
}

.rarity-item.legendary {
    background-color: #fff8e1;
    color: #f9a825;
}

.filter-option input {
    width: 100%;
    padding: 5px 8px;
    border: 1px solid #ddd;
    border-radius: 4px;
    margin-top: 5px;
}

.card-item {
    position: relative;
    cursor: pointer;
    transition: transform 0.2s ease;
    border: 2px solid transparent;
    border-radius: 8px;
    box-shadow: 0 2px 4px rgba(0,0,0,0.1);
}

.card-item:hover {
    transform: translateY(-5px);
    box-shadow: 0 4px 8px rgba(0,0,0,0.15);
}

.card-item.selected {
    border: 2px solid var(--color-primary, #3498db);
    box-shadow: 0 0 10px rgba(52, 152, 219, 0.3);
}

.card-sale-indicator {
    position: absolute;
    top: 10px;
    right: 10px;
    background: var(--color-success, #28a745);
    color: white;
    padding: 2px 6px;
    border-radius: 4px;
    font-size: 0.75rem;
    font-weight: bold;
}

.card-stats {
    display: flex;
    justify-content: space-around;
    margin-top: 8px;
    font-size: 0.8rem;
}

.card-stat {
    text-align: center;
}

.card-stat-value {
    font-weight: bold;
    color: var(--color-primary, #3498db);
}

.card-stat-label {
    font-size: 0.7rem;
    color: #666;
}

.error-message {
    background-color: #f8d7da;
    border: 1px solid #f5c6cb;
    color: #721c24;
    padding: 10px;
    border-radius: 4px;
    margin: 10px 0;
}

.success-message {
    background-color: #d4edda;
    border: 1px solid #c3e6cb;
    color: #155724;
    padding: 10px;
    border-radius: 4px;
    margin: 10px 0;
}

/* Styles pour la grille de cartes */
.cards-grid {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));
    gap: 20px;
    margin: 20px 0;
}

.card-image {
    position: relative;
    width: 100%;
    height: 200px;
    overflow: hidden;
    border-radius: 8px;
}

.card-artwork {
    width: 100%;
    height: 100%;
    object-fit: cover;
}

.card-info h3 {
    margin: 0 0 5px 0;
    font-size: 1.1rem;
    color: #333;
}

.card-description {
    font-size: 0.9rem;
    color: #666;
    margin: 5px 0;
    height: 40px;
    overflow: hidden;
    text-overflow: ellipsis;
}
</style>